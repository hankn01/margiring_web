{
    "parser": "@babel/eslint-parser",
    "plugins": ["prettier"],
    "extends": ["plugin:prettier/recommended"],
    "overrides": [
        {
            "files": ["*.ts"],
            "parser": "@typescript-eslint/parser",
            "rules": {
                "no-unused-vars": "off"
            }
        },
        {
            "files": ["*.d.ts"],
            "parser": "@typescript-eslint/parser",
            "rules": {
                "no-unused-vars": "off",
                "no-var": "off",
                "no-useless-constructor": "off"
            }
        }
    ],
    "env": {
        "es6": true,
        "browser": true,
        "jquery": true
    },
    "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "rules": {
        "prefer-const": "warn",
        "no-var": "warn",
        "eqeqeq": 0,
        "no-const-assign": "error",
        "no-new-object": "warn",
        "object-shorthand": "warn",
        "no-prototype-builtins": "warn",
        "no-array-constructor": "warn",
        "prefer-template": "warn",
        "no-useless-escape": "warn",
        "wrap-iife": ["warn", "inside"],
        "no-loop-func": "warn",
        "no-new-func": "warn",
        "prefer-rest-params": "warn",
        "space-before-function-paren": [
            "warn",
            {
                "anonymous": "never",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "prefer-arrow-callback": "warn",
        "template-curly-spacing": "warn",
        "no-param-reassign": ["warn", { "props": false }],
        "prefer-spread": "warn",
        "arrow-spacing": "warn",
        "arrow-body-style": ["warn", "as-needed"],
        "no-useless-constructor": "warn",
        "no-dupe-class-members": "warn",
        "no-duplicate-imports": "warn",
        "dot-notation": "warn",
        "no-undef": ["warn", { "typeof": true }],
        "one-var": ["warn", "never"],
        "no-multi-assign": "warn",
        "no-case-declarations": "warn",
        "no-nested-ternary": "warn",
        "no-unneeded-ternary": "warn",
        "brace-style": "warn",
        "space-before-blocks": [
            "warn",
            { "functions": "always", "keywords": "always", "classes": "always" }
        ],
        "space-infix-ops": "warn",
        "eol-last": ["warn", "always"],
        "no-whitespace-before-property": "warn",
        "padded-blocks": ["warn", "never"],
        "space-in-parens": ["warn", "never"],
        "array-bracket-spacing": ["warn", "never"],
        "object-curly-spacing": ["warn", "always"],
        "max-len": ["warn", { "code": 100 }],
        "comma-style": ["warn", "last"],
        "semi": ["warn"],
        "radix": "warn",
        "camelcase": ["warn", { "properties": "never" }],
        "new-cap": ["warn", { "capIsNewExceptionPattern": "^Entry." }],
        "curly": "warn",
        "keyword-spacing": "warn"
    },
    "globals": {
        "$": true,
        "_": true,
        "arcon": true,
        "goog": true,
        "acorn": true,
        "createjs": true,
        "Entry": true,
        "filbert": true,
        "Blockly": true,
        "BigNumber": true,
        "Lang": true,
        "context": true,
        "popup": true,
        "WebFont": true,
        "CanvasInput": true,
        "EntryStatic": true,
        "EaselHandle": true,
        "ndgmr": true,
        "Ntry": true,
        "Snap": true,
        "mina": true,
        "Touch": true,
        "io": true,
        "LC": true,
        "ActiveXObject": true,
        "CodeMirror": true,
        "entrylms": true,
        "require": true,
        "module": true,
        "Symbol": true,
        "process": true
    }
}

/*

module.exports = {
    root: true,
    env: {
      browser: true,
      es2021: true,
    },
    extends: [
      'prettier',
      'eslint:recommended',
      'plugin:react/recommended',
      'plugin:react-hooks/recommended',
      'plugin:@typescript-eslint/eslint-recommended',
      'plugin:@typescript-eslint/recommended',
      'plugin:@typescript-eslint/recommended-requiring-type-checking',
      'plugin:import/typescript',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
      project: './tsconfig.json',
      tsconfigRootDir: __dirname,
      ecmaFeatures: {
        jsx: true,
      },
      ecmaVersion: 12,
      sourceType: 'module',
    },
    plugins: [
      'react',
      'react-hooks',
      '@typescript-eslint',
      'import',
      'unused-imports',
    ],
    rules: {
      '@typescript-eslint/no-unused-vars': 'off',
      'unused-imports/no-unused-imports': 'error',
      'unused-imports/no-unused-vars': [
        'warn',
        {
          vars: 'all',
          varsIgnorePattern: '^_',
          args: 'after-used',
          argsIgnorePattern: '^_',
        },
      ],
      '@typescript-eslint/no-empty-interface': 'off',
      '@typescript-eslint/ban-ts-comment': 'off',
      'no-empty-function': 'off',
      '@typescript-eslint/no-empty-function': 'off',
      'import/no-anonymous-default-export': 'off',
      'import/order': [
        'error',
        {
          groups: [
            'builtin',
            'external',
            'internal',
            'type',
            'parent',
            'sibling',
            'index',
            'object',
          ],
          pathGroups: [
            {
              pattern: 'react',
              group: 'external',
              position: 'before',
            },
          ],
          pathGroupsExcludedImportTypes: ['react'],
          'newlines-between': 'never',
          alphabetize: {
            order: 'asc',
            caseInsensitive: false,
          },
        },
      ],
    },
    settings: {
      react: {
        version: 'detect',
      },
      'import/extensions': ['.js', '.jsx', '.ts', '.tsx'],
    },
  };
  
  */
